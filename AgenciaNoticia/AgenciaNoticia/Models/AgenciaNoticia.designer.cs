#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AgenciaNoticia.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="AgenciaNoticia")]
	public partial class AgenciaNoticiaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRelatorio(Relatorio instance);
    partial void UpdateRelatorio(Relatorio instance);
    partial void DeleteRelatorio(Relatorio instance);
    partial void InsertUsuario(Usuario instance);
    partial void UpdateUsuario(Usuario instance);
    partial void DeleteUsuario(Usuario instance);
    partial void InsertNoticia(Noticia instance);
    partial void UpdateNoticia(Noticia instance);
    partial void DeleteNoticia(Noticia instance);
    partial void InsertPedido(Pedido instance);
    partial void UpdatePedido(Pedido instance);
    partial void DeletePedido(Pedido instance);
    #endregion
		
		public AgenciaNoticiaDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AgenciaNoticiaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AgenciaNoticiaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgenciaNoticiaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgenciaNoticiaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AgenciaNoticiaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Relatorio> Relatorios
		{
			get
			{
				return this.GetTable<Relatorio>();
			}
		}
		
		public System.Data.Linq.Table<Usuario> Usuarios
		{
			get
			{
				return this.GetTable<Usuario>();
			}
		}
		
		public System.Data.Linq.Table<Noticia> Noticias
		{
			get
			{
				return this.GetTable<Noticia>();
			}
		}
		
		public System.Data.Linq.Table<Pedido> Pedidos
		{
			get
			{
				return this.GetTable<Pedido>();
			}
		}
	}
	
	[Table(Name="dbo.Relatorios")]
	public partial class Relatorio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RelatorioId;
		
		private System.Nullable<System.DateTime> _DataRelatorio;
		
		private System.Nullable<float> _TotalDeVendas;
		
		private System.Nullable<int> _TotalDeNoticiasAcessadas;
		
		private System.Nullable<int> _NumeroNoticiasVendidas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRelatorioIdChanging(int value);
    partial void OnRelatorioIdChanged();
    partial void OnDataRelatorioChanging(System.Nullable<System.DateTime> value);
    partial void OnDataRelatorioChanged();
    partial void OnTotalDeVendasChanging(System.Nullable<float> value);
    partial void OnTotalDeVendasChanged();
    partial void OnTotalDeNoticiasAcessadasChanging(System.Nullable<int> value);
    partial void OnTotalDeNoticiasAcessadasChanged();
    partial void OnNumeroNoticiasVendidasChanging(System.Nullable<int> value);
    partial void OnNumeroNoticiasVendidasChanged();
    #endregion
		
		public Relatorio()
		{
			OnCreated();
		}
		
		[Column(Storage="_RelatorioId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RelatorioId
		{
			get
			{
				return this._RelatorioId;
			}
			set
			{
				if ((this._RelatorioId != value))
				{
					this.OnRelatorioIdChanging(value);
					this.SendPropertyChanging();
					this._RelatorioId = value;
					this.SendPropertyChanged("RelatorioId");
					this.OnRelatorioIdChanged();
				}
			}
		}
		
		[Column(Storage="_DataRelatorio", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataRelatorio
		{
			get
			{
				return this._DataRelatorio;
			}
			set
			{
				if ((this._DataRelatorio != value))
				{
					this.OnDataRelatorioChanging(value);
					this.SendPropertyChanging();
					this._DataRelatorio = value;
					this.SendPropertyChanged("DataRelatorio");
					this.OnDataRelatorioChanged();
				}
			}
		}
		
		[Column(Storage="_TotalDeVendas", DbType="Real")]
		public System.Nullable<float> TotalDeVendas
		{
			get
			{
				return this._TotalDeVendas;
			}
			set
			{
				if ((this._TotalDeVendas != value))
				{
					this.OnTotalDeVendasChanging(value);
					this.SendPropertyChanging();
					this._TotalDeVendas = value;
					this.SendPropertyChanged("TotalDeVendas");
					this.OnTotalDeVendasChanged();
				}
			}
		}
		
		[Column(Storage="_TotalDeNoticiasAcessadas", DbType="Int")]
		public System.Nullable<int> TotalDeNoticiasAcessadas
		{
			get
			{
				return this._TotalDeNoticiasAcessadas;
			}
			set
			{
				if ((this._TotalDeNoticiasAcessadas != value))
				{
					this.OnTotalDeNoticiasAcessadasChanging(value);
					this.SendPropertyChanging();
					this._TotalDeNoticiasAcessadas = value;
					this.SendPropertyChanged("TotalDeNoticiasAcessadas");
					this.OnTotalDeNoticiasAcessadasChanged();
				}
			}
		}
		
		[Column(Storage="_NumeroNoticiasVendidas", DbType="Int")]
		public System.Nullable<int> NumeroNoticiasVendidas
		{
			get
			{
				return this._NumeroNoticiasVendidas;
			}
			set
			{
				if ((this._NumeroNoticiasVendidas != value))
				{
					this.OnNumeroNoticiasVendidasChanging(value);
					this.SendPropertyChanging();
					this._NumeroNoticiasVendidas = value;
					this.SendPropertyChanged("NumeroNoticiasVendidas");
					this.OnNumeroNoticiasVendidasChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Usuarios")]
	public partial class Usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private int _UsuarioID;
		
		private string _Perfil;
		
		private string _Senha;
		
		private string _Cpf;
		
		private string _Rg;
		
		private string _Email;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnUsuarioIDChanging(int value);
    partial void OnUsuarioIDChanged();
    partial void OnPerfilChanging(string value);
    partial void OnPerfilChanged();
    partial void OnSenhaChanging(string value);
    partial void OnSenhaChanged();
    partial void OnCpfChanging(string value);
    partial void OnCpfChanged();
    partial void OnRgChanging(string value);
    partial void OnRgChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Usuario()
		{
			OnCreated();
		}
		
		[Column(Storage="_Nome", DbType="NVarChar(MAX)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[Column(Storage="_UsuarioID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UsuarioID
		{
			get
			{
				return this._UsuarioID;
			}
			set
			{
				if ((this._UsuarioID != value))
				{
					this.OnUsuarioIDChanging(value);
					this.SendPropertyChanging();
					this._UsuarioID = value;
					this.SendPropertyChanged("UsuarioID");
					this.OnUsuarioIDChanged();
				}
			}
		}
		
		[Column(Storage="_Perfil", DbType="NVarChar(50)")]
		public string Perfil
		{
			get
			{
				return this._Perfil;
			}
			set
			{
				if ((this._Perfil != value))
				{
					this.OnPerfilChanging(value);
					this.SendPropertyChanging();
					this._Perfil = value;
					this.SendPropertyChanged("Perfil");
					this.OnPerfilChanged();
				}
			}
		}
		
		[Column(Storage="_Senha", DbType="NVarChar(50)")]
		public string Senha
		{
			get
			{
				return this._Senha;
			}
			set
			{
				if ((this._Senha != value))
				{
					this.OnSenhaChanging(value);
					this.SendPropertyChanging();
					this._Senha = value;
					this.SendPropertyChanged("Senha");
					this.OnSenhaChanged();
				}
			}
		}
		
		[Column(Storage="_Cpf", DbType="NVarChar(20)")]
		public string Cpf
		{
			get
			{
				return this._Cpf;
			}
			set
			{
				if ((this._Cpf != value))
				{
					this.OnCpfChanging(value);
					this.SendPropertyChanging();
					this._Cpf = value;
					this.SendPropertyChanged("Cpf");
					this.OnCpfChanged();
				}
			}
		}
		
		[Column(Storage="_Rg", DbType="NVarChar(20)")]
		public string Rg
		{
			get
			{
				return this._Rg;
			}
			set
			{
				if ((this._Rg != value))
				{
					this.OnRgChanging(value);
					this.SendPropertyChanging();
					this._Rg = value;
					this.SendPropertyChanged("Rg");
					this.OnRgChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Noticia")]
	public partial class Noticia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NoticiaID;
		
		private string _Categoria;
		
		private System.Nullable<float> _Preco;
		
		private string _Vigencia;
		
		private string _Texto;
		
		private System.Data.Linq.Binary _Image;
		
		private string _MimeType;
		
		private string _FileName;
		
		private System.Nullable<int> _PedidoId;
		
		private int _NumeroDeAcessos;
		
		private int _NumeroDeVendas;
		
		private EntityRef<Pedido> _Pedido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNoticiaIDChanging(int value);
    partial void OnNoticiaIDChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnPrecoChanging(System.Nullable<float> value);
    partial void OnPrecoChanged();
    partial void OnVigenciaChanging(string value);
    partial void OnVigenciaChanged();
    partial void OnTextoChanging(string value);
    partial void OnTextoChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnMimeTypeChanging(string value);
    partial void OnMimeTypeChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnPedidoIdChanging(System.Nullable<int> value);
    partial void OnPedidoIdChanged();
    partial void OnNumeroDeAcessosChanging(int value);
    partial void OnNumeroDeAcessosChanged();
    partial void OnNumeroDeVendasChanging(int value);
    partial void OnNumeroDeVendasChanged();
    #endregion
		
		public Noticia()
		{
			this._Pedido = default(EntityRef<Pedido>);
			OnCreated();
		}
		
		[Column(Storage="_NoticiaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NoticiaID
		{
			get
			{
				return this._NoticiaID;
			}
			set
			{
				if ((this._NoticiaID != value))
				{
					this.OnNoticiaIDChanging(value);
					this.SendPropertyChanging();
					this._NoticiaID = value;
					this.SendPropertyChanged("NoticiaID");
					this.OnNoticiaIDChanged();
				}
			}
		}
		
		[Column(Storage="_Categoria", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[Column(Storage="_Preco", DbType="Real")]
		public System.Nullable<float> Preco
		{
			get
			{
				return this._Preco;
			}
			set
			{
				if ((this._Preco != value))
				{
					this.OnPrecoChanging(value);
					this.SendPropertyChanging();
					this._Preco = value;
					this.SendPropertyChanged("Preco");
					this.OnPrecoChanged();
				}
			}
		}
		
		[Column(Storage="_Vigencia", DbType="NVarChar(20)")]
		public string Vigencia
		{
			get
			{
				return this._Vigencia;
			}
			set
			{
				if ((this._Vigencia != value))
				{
					this.OnVigenciaChanging(value);
					this.SendPropertyChanging();
					this._Vigencia = value;
					this.SendPropertyChanged("Vigencia");
					this.OnVigenciaChanged();
				}
			}
		}
		
		[Column(Storage="_Texto", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Texto
		{
			get
			{
				return this._Texto;
			}
			set
			{
				if ((this._Texto != value))
				{
					this.OnTextoChanging(value);
					this.SendPropertyChanging();
					this._Texto = value;
					this.SendPropertyChanged("Texto");
					this.OnTextoChanged();
				}
			}
		}
		
		[Column(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[Column(Storage="_MimeType", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this.OnMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._MimeType = value;
					this.SendPropertyChanged("MimeType");
					this.OnMimeTypeChanged();
				}
			}
		}
		
		[Column(Storage="_FileName", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[Column(Storage="_PedidoId", DbType="Int")]
		public System.Nullable<int> PedidoId
		{
			get
			{
				return this._PedidoId;
			}
			set
			{
				if ((this._PedidoId != value))
				{
					if (this._Pedido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPedidoIdChanging(value);
					this.SendPropertyChanging();
					this._PedidoId = value;
					this.SendPropertyChanged("PedidoId");
					this.OnPedidoIdChanged();
				}
			}
		}
		
		[Column(Storage="_NumeroDeAcessos", DbType="Int")]
		public int NumeroDeAcessos
		{
			get
			{
				return this._NumeroDeAcessos;
			}
			set
			{
				if ((this._NumeroDeAcessos != value))
				{
					this.OnNumeroDeAcessosChanging(value);
					this.SendPropertyChanging();
					this._NumeroDeAcessos = value;
					this.SendPropertyChanged("NumeroDeAcessos");
					this.OnNumeroDeAcessosChanged();
				}
			}
		}
		
		[Column(Storage="_NumeroDeVendas", DbType="Int")]
		public int NumeroDeVendas
		{
			get
			{
				return this._NumeroDeVendas;
			}
			set
			{
				if ((this._NumeroDeVendas != value))
				{
					this.OnNumeroDeVendasChanging(value);
					this.SendPropertyChanging();
					this._NumeroDeVendas = value;
					this.SendPropertyChanged("NumeroDeVendas");
					this.OnNumeroDeVendasChanged();
				}
			}
		}
		
		[Association(Name="Pedido_Noticia", Storage="_Pedido", ThisKey="PedidoId", OtherKey="PedidoId", IsForeignKey=true)]
		public Pedido Pedido
		{
			get
			{
				return this._Pedido.Entity;
			}
			set
			{
				Pedido previousValue = this._Pedido.Entity;
				if (((previousValue != value) 
							|| (this._Pedido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pedido.Entity = null;
						previousValue.Noticias.Remove(this);
					}
					this._Pedido.Entity = value;
					if ((value != null))
					{
						value.Noticias.Add(this);
						this._PedidoId = value.PedidoId;
					}
					else
					{
						this._PedidoId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pedido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.Pedido")]
	public partial class Pedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PedidoId;
		
		private string _Data;
		
		private EntitySet<Noticia> _Noticias;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPedidoIdChanging(int value);
    partial void OnPedidoIdChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public Pedido()
		{
			this._Noticias = new EntitySet<Noticia>(new Action<Noticia>(this.attach_Noticias), new Action<Noticia>(this.detach_Noticias));
			OnCreated();
		}
		
		[Column(Storage="_PedidoId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PedidoId
		{
			get
			{
				return this._PedidoId;
			}
			set
			{
				if ((this._PedidoId != value))
				{
					this.OnPedidoIdChanging(value);
					this.SendPropertyChanging();
					this._PedidoId = value;
					this.SendPropertyChanged("PedidoId");
					this.OnPedidoIdChanged();
				}
			}
		}
		
		[Column(Storage="_Data", DbType="NVarChar(20)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[Association(Name="Pedido_Noticia", Storage="_Noticias", ThisKey="PedidoId", OtherKey="PedidoId")]
		public EntitySet<Noticia> Noticias
		{
			get
			{
				return this._Noticias;
			}
			set
			{
				this._Noticias.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Noticias(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Pedido = this;
		}
		
		private void detach_Noticias(Noticia entity)
		{
			this.SendPropertyChanging();
			entity.Pedido = null;
		}
	}
}
#pragma warning restore 1591
